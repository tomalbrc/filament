plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '8.3.6'
}

version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/filament.accesswidener")
}

configurations {
    shadow
}

repositories {
    maven { url 'https://maven.tomalbrc.de' }
    maven { url 'https://maven.nucleoid.xyz' }
    maven { url 'https://maven.parchmentmc.org' }
    mavenLocal()
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings(loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}")
    })
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Polymer
    modImplementation ("eu.pb4:polymer-core:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-blocks:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-resource-pack:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-resource-pack-extras:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-virtual-entity:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-networking:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-autohost:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-sound-patcher:${project.polymer_version}")

    modImplementation include("eu.pb4:sgui:1.10.2+1.21.8")

    // BIL
    modImplementation include("de.tomalbrc:blockbench-import-library:${project.bil_version}")

    modImplementation include("eu.pb4:placeholder-api:${project.papi_version}")

    modImplementation include("net.kyori:adventure-platform-fabric:${project.adventure_platform_version}")
    implementation "net.kyori:adventure-text-minimessage:${project.adventure_api_version}"
    implementation "net.kyori:adventure-api:${project.adventure_api_version}"

    shadow implementation('org.yaml:snakeyaml:2.4')
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "bil_version": project.bil_version,
                "polymer_version": project.polymer_version,
                "loader_version": project.loader_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(21)
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    zip64 true
    relocate 'org.yaml.snakeyaml', 'de.tomalbrc.filament.snakeyaml'
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        mavenLocal()
    }
}
